// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using ToAquiBrasil.Data;

#nullable disable

namespace ToAquiBrasil.Data.Migrations
{
    [DbContext(typeof(ToAquiBrasilDbContext))]
    [Migration("20250604162146_listing-new-props")]
    partial class listingnewprops
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToAquiBrasil.Data.Entities.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Person")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Services")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Location");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("ToAquiBrasil.Data.Entities.Listing", b =>
                {
                    b.OwnsMany("ToAquiBrasil.Data.Entities.ValueObjects.Contact", "Contacts", b1 =>
                        {
                            b1.Property<int>("ListingId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Icon")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Link")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ListingId", "Id");

                            b1.ToTable("Contact");

                            b1.WithOwner()
                                .HasForeignKey("ListingId");
                        });

                    b.OwnsMany("ToAquiBrasil.Data.Entities.ValueObjects.ListingImage", "Images", b1 =>
                        {
                            b1.Property<int>("ListingId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Image")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ListingId", "Id");

                            b1.ToTable("ListingImage");

                            b1.WithOwner()
                                .HasForeignKey("ListingId");
                        });

                    b.OwnsMany("ToAquiBrasil.Data.Entities.ValueObjects.OpeningHours", "OpeningHours", b1 =>
                        {
                            b1.Property<int>("ListingId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("DayOfWeek")
                                .HasColumnType("int");

                            b1.Property<string>("Hours")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ListingId", "Id");

                            b1.ToTable("OpeningHours");

                            b1.WithOwner()
                                .HasForeignKey("ListingId");
                        });

                    b.OwnsMany("ToAquiBrasil.Data.Entities.ValueObjects.Review", "Reviews", b1 =>
                        {
                            b1.Property<int>("ListingId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Avatar")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Stars")
                                .HasColumnType("int");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ListingId", "Id");

                            b1.ToTable("Review");

                            b1.WithOwner()
                                .HasForeignKey("ListingId");
                        });

                    b.Navigation("Contacts");

                    b.Navigation("Images");

                    b.Navigation("OpeningHours");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
